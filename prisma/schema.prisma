generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(uuid()) @db.Uuid
  provider    String
  providerId  String
  email       String
  name        String   @unique
  image       String?
  description String   @default("")
  links       String[]

  createdAt DateTime @default(now())

  followedBys Follow[]  @relation("followedBy")
  followings  Follow[]  @relation("following")
  galleries   Gallery[]

  @@unique([provider, providerId])
}

model Follow {
  followedById String @db.Uuid
  followingId  String @db.Uuid

  followedBy User @relation("followedBy", fields: [followedById], references: [id], onDelete: Cascade)
  following  User @relation("following", fields: [followingId], references: [id], onDelete: Cascade)

  @@id([followedById, followingId])
  @@index([followingId])
}

model Gallery {
  id        String   @id @default(uuid()) @db.Uuid
  authorId  String   @db.Uuid
  title     String
  images    String[]
  isAI      Boolean  @default(false)
  createdAt DateTime @default(now())
  viewCount Int      @default(0)
  likeCount Int      @default(0)
  content   String   @default("")
  tags      Tag[]

  author User @relation(fields: [authorId], references: [id], onDelete: Cascade)

  @@index([title])
  @@index([authorId])
}

model Tag {
  galleryId String @db.Uuid
  tagName   String

  gallery Gallery @relation(fields: [galleryId], references: [id], onDelete: Cascade)

  @@id([galleryId, tagName])
}
